version: "3.8"

services:
  web_prod:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    container_name: planimbly-web-${ENV_STAGE:?environment stage not specified in .env}
    command: >
      sh -c "python manage.py migrate --no-input &&
             python manage.py collectstatic --no-input &&
             gunicorn --workers=3 planimbly.wsgi --bind 0.0.0.0:8000"
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - ./staticfiles:/code/staticfiles
      - ./mediafiles:/code/mediafiles
  nginx_proxy:
    build: nginx
    container_name: planimbly-nginx-${ENV_STAGE:?environment stage not specified in .env}
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./staticfiles:/code/staticfiles
      - ./mediafiles:/code/mediafiles
      - ./production_volumes/certs:/etc/nginx/certs
      - ./production_volumes/html:/usr/share/nginx/html
      - ./production_volumes/vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web_prod
  nginx_letsencrypt_companion:
    image: ghcr.io/nginx-proxy/acme-companion:latest
    env_file:
      - .env
    volumes:
      - ./production_volumes/certs:/etc/nginx/certs
      - ./production_volumes/html:/usr/share/nginx/html
      - ./production_volumes/vhost:/etc/nginx/vhost.d
      - ./production_volumes/acme:/etc/acme.sh
    depends_on:
      - nginx_proxy
      
networks:
  default:
    name: planimbly-default-${ENV_STAGE:?environment stage not specified in .env}